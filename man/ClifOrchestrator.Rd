% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clif_orchestrator.R
\name{ClifOrchestrator}
\alias{ClifOrchestrator}
\title{CLIF Orchestrator Class}
\description{
Main orchestration class for managing multiple CLIF tables and coordinating
operations across them. Provides a unified interface for loading, validating,
and analyzing CLIF data.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{config_path}}{Character path to configuration file}

\item{\code{config}}{List containing configuration}

\item{\code{data_directory}}{Character path to data directory}

\item{\code{filetype}}{Character file type ("csv" or "parquet")}

\item{\code{timezone}}{Character timezone for datetime columns}

\item{\code{output_directory}}{Character path for output files}

\item{\code{stitch_encounter}}{Logical whether to stitch encounters}

\item{\code{stitch_time_interval}}{Numeric hours between encounters for stitching}

\item{\code{patient}}{Patient table object}

\item{\code{hospitalization}}{Hospitalization table object}

\item{\code{adt}}{ADT table object}

\item{\code{vitals}}{Vitals table object}

\item{\code{labs}}{Labs table object}

\item{\code{encounter_mapping}}{tibble mapping original to stitched IDs}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ClifOrchestrator-new}{\code{ClifOrchestrator$new()}}
\item \href{#method-ClifOrchestrator-load_table}{\code{ClifOrchestrator$load_table()}}
\item \href{#method-ClifOrchestrator-initialize_tables}{\code{ClifOrchestrator$initialize_tables()}}
\item \href{#method-ClifOrchestrator-validate_all}{\code{ClifOrchestrator$validate_all()}}
\item \href{#method-ClifOrchestrator-apply_stitching}{\code{ClifOrchestrator$apply_stitching()}}
\item \href{#method-ClifOrchestrator-summary}{\code{ClifOrchestrator$summary()}}
\item \href{#method-ClifOrchestrator-export_validation_reports}{\code{ClifOrchestrator$export_validation_reports()}}
\item \href{#method-ClifOrchestrator-print}{\code{ClifOrchestrator$print()}}
\item \href{#method-ClifOrchestrator-create_wide_dataset}{\code{ClifOrchestrator$create_wide_dataset()}}
\item \href{#method-ClifOrchestrator-calculate_sofa_scores}{\code{ClifOrchestrator$calculate_sofa_scores()}}
\item \href{#method-ClifOrchestrator-calculate_charlson_scores}{\code{ClifOrchestrator$calculate_charlson_scores()}}
\item \href{#method-ClifOrchestrator-convert_medication_doses}{\code{ClifOrchestrator$convert_medication_doses()}}
\item \href{#method-ClifOrchestrator-generate_analysis_report}{\code{ClifOrchestrator$generate_analysis_report()}}
\item \href{#method-ClifOrchestrator-clone}{\code{ClifOrchestrator$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-new"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-new}{}}}
\subsection{Method \code{new()}}{
Initialize ClifOrchestrator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$new(
  config_path = NULL,
  data_directory = NULL,
  filetype = "csv",
  timezone = "UTC",
  output_directory = NULL,
  stitch_encounter = FALSE,
  stitch_time_interval = 24
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{config_path}}{Character. Path to configuration YAML file (optional).}

\item{\code{data_directory}}{Character. Path to directory containing CLIF data files.}

\item{\code{filetype}}{Character. File type: "csv" or "parquet" (default: "csv").}

\item{\code{timezone}}{Character. Timezone for datetime columns (default: "UTC").}

\item{\code{output_directory}}{Character. Path for saving outputs (default: NULL).}

\item{\code{stitch_encounter}}{Logical. Whether to stitch related encounters (default: FALSE).}

\item{\code{stitch_time_interval}}{Numeric. Hours between encounters to stitch (default: 24).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new ClifOrchestrator instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-load_table"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-load_table}{}}}
\subsection{Method \code{load_table()}}{
Load a specific CLIF table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$load_table(table_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{table_name}}{Character. Name of table to load.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The loaded table object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-initialize_tables"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-initialize_tables}{}}}
\subsection{Method \code{initialize_tables()}}{
Initialize and load multiple tables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$initialize_tables(tables = NULL, validate = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tables}}{Character vector of table names to load. If NULL, loads all available.}

\item{\code{validate}}{Logical. Whether to validate after loading (default: TRUE).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-validate_all"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-validate_all}{}}}
\subsection{Method \code{validate_all()}}{
Validate all loaded tables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$validate_all(verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Logical. Print validation details (default: TRUE).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List of validation results for each table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-apply_stitching"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-apply_stitching}{}}}
\subsection{Method \code{apply_stitching()}}{
Apply encounter stitching to hospitalization data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$apply_stitching()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisible self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-summary"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-summary}{}}}
\subsection{Method \code{summary()}}{
Get summary of all loaded tables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of summary information.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-export_validation_reports"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-export_validation_reports}{}}}
\subsection{Method \code{export_validation_reports()}}{
Export all validation reports
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$export_validation_reports(output_dir = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{output_dir}}{Character. Directory for reports (default: uses self$output_directory).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-print"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-print}{}}}
\subsection{Method \code{print()}}{
Print method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-create_wide_dataset"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-create_wide_dataset}{}}}
\subsection{Method \code{create_wide_dataset()}}{
Create wide dataset from vitals and labs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$create_wide_dataset(
  time_resolution = "hour",
  id_col = "hospitalization_id"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{time_resolution}}{Character. Time resolution: "hour", "4hour", "day" (default: "hour").}

\item{\code{id_col}}{Character. ID column name (default: "hospitalization_id").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
tibble in wide format.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-calculate_sofa_scores"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-calculate_sofa_scores}{}}}
\subsection{Method \code{calculate_sofa_scores()}}{
Calculate SOFA scores from wide dataset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$calculate_sofa_scores(
  wide_data = NULL,
  time_resolution = "hour",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wide_data}}{tibble. Wide format data (optional, will create if not provided).}

\item{\code{time_resolution}}{Character. Time resolution if creating wide data (default: "hour").}

\item{\code{...}}{Additional arguments passed to calculate_sofa_time_series().}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
tibble with SOFA scores.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-calculate_charlson_scores"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-calculate_charlson_scores}{}}}
\subsection{Method \code{calculate_charlson_scores()}}{
Calculate Charlson Comorbidity Index for patients
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$calculate_charlson_scores(
  diagnosis_data,
  patient_id_col = "hospitalization_id",
  icd_code_col = "icd_code",
  icd_version_col = NULL,
  age_col = NULL,
  default_icd_version = "10"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{diagnosis_data}}{tibble. Diagnosis data with ICD codes (required).}

\item{\code{patient_id_col}}{Character. Patient ID column (default: "hospitalization_id").}

\item{\code{icd_code_col}}{Character. ICD code column (default: "icd_code").}

\item{\code{icd_version_col}}{Character. ICD version column (optional).}

\item{\code{age_col}}{Character. Age column (optional).}

\item{\code{default_icd_version}}{Character. Default ICD version (default: "10").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
tibble with CCI scores.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-convert_medication_doses"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-convert_medication_doses}{}}}
\subsection{Method \code{convert_medication_doses()}}{
Convert medication doses to standard units
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$convert_medication_doses(
  target_units,
  dose_col = "dose",
  unit_col = "dose_unit",
  medication_col = "medication_name",
  weight_col = "weight_kg"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{target_units}}{Named list. Target units by medication name.}

\item{\code{dose_col}}{Character. Dose column name (default: "dose").}

\item{\code{unit_col}}{Character. Unit column name (default: "dose_unit").}

\item{\code{medication_col}}{Character. Medication name column (default: "medication_name").}

\item{\code{weight_col}}{Character. Weight column name (default: "weight_kg").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
tibble with converted medication doses.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-generate_analysis_report"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-generate_analysis_report}{}}}
\subsection{Method \code{generate_analysis_report()}}{
Generate comprehensive analysis report
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$generate_analysis_report(
  include_sofa = FALSE,
  include_charlson = FALSE,
  diagnosis_data = NULL,
  output_file = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_sofa}}{Logical. Include SOFA scores (default: FALSE).}

\item{\code{include_charlson}}{Logical. Include Charlson scores (default: FALSE).}

\item{\code{diagnosis_data}}{tibble. Diagnosis data for Charlson (required if include_charlson = TRUE).}

\item{\code{output_file}}{Character. Output file path (optional).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
List with analysis results.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClifOrchestrator-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ClifOrchestrator-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClifOrchestrator$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
